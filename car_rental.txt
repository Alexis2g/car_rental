-- Clear Database 
DROP TABLE IF EXISTS T_CLIENT_GENERAL;
DROP TABLE IF EXISTS T_CLIENT_CONTACT;
DROP TABLE IF EXISTS T_CLIENT_ADDRESS;
DROP TABLE IF EXISTS T_CLIENT_COUNTRY;
DROP TABLE IF EXISTS T_CLIENT_CITY;

DROP TABLE IF EXISTS T_VEHICLE_GENERAL;
DROP TABLE IF EXISTS T_VEHICLE_TYPE;
DROP TABLE IF EXISTS T_VEHICLE_COMFORT;
DROP TABLE IF EXISTS T_VEHICLE_PERFORMANCE;
DROP TABLE IF EXISTS T_VEHICLE_ASPIRATION;

DROP TABLE IF EXISTS T_RESERVATION_GENERAL;
DROP TABLE IF EXISTS T_RESERVATION_CHECKOUT;
DROP TABLE IF EXISTS T_RESERVATION_PRICING;

-- Create the Client side tables

CREATE TABLE T_CLIENT_GENERAL (
    clt_general_id INTEGER,
    clt_general_first_name VARCHAR(60),
    clt_general_last_name VARCHAR(100),
    clt_general_year_birth INTEGER,
    PRIMARY KEY (clt_general_id)
);

CREATE TABLE T_CLIENT_CONTACT (
    clt_contact_id INTEGER,
    clt_contact_mail VARCHAR(200),
    clt_contact_phone INT(10),
    PRIMARY KEY (clt_contact_id),
    FOREIGN KEY (clt_contact_id) REFERENCES T_CLIENT_GENERAL (clt_general_id)
);

CREATE TABLE T_CLIENT_ADDRESS (
    clt_address_id INTEGER,
    clt_city_id INTEGER,
    PRIMARY KEY (clt_address_id),
    FOREIGN KEY (clt_address_id) REFERENCES T_CLIENT_GENERAL (clt_general_id)
);

CREATE TABLE T_CLIENT_CITY (
    clt_city_id INTEGER,
    clt_city_name VARCHAR(80),
    clt_country_id INTEGER,
    PRIMARY KEY (clt_city_id),
    FOREIGN KEY (clt_city_id) REFERENCES T_CLIENT_ADDRESS (clt_city_id)    
);

CREATE TABLE T_CLIENT_COUNTRY (
    clt_country_id INTEGER,
    clt_country_name VARCHAR(80),
    PRIMARY KEY (clt_country_id),
    FOREIGN KEY (clt_country_id) REFERENCES T_CLIENT_CITY (clt_country_id)
);




-- Insert the client side data

INSERT INTO T_CLIENT_GENERAL (
    clt_general_first_name, clt_general_last_name, clt_general_year_birth)
VALUES 
    ("Susan", "WILSON", 1960), 
    ("Margaret", "MOORE", 1970), 
    ("Lisa", "ANDERSON", 1980)
;

INSERT INTO T_CLIENT_CONTACT (
    clt_contact_mail, clt_contact_phone)
VALUES 
    ("SUSAN.WILSON@sakilacustomer.org", 0689647521), 
    ("MARGARET.MOORE@sakilacustomer.org", 0685246697), 
    ("lisa.ANDERSON@sakilacustomer.org", 0741426587)
;

INSERT INTO T_CLIENT_ADDRESS (
    clt_city_id)
VALUES 
    (1), (2), (3)
;

INSERT INTO T_CLIENT_CITY (
    clt_city_name, clt_country_id)
VALUES
    ("Chicago", 1), ("Miami", 1),
    ("Lyon", 2 ), ("Marseille", 2),
    ("Rome", 3), ("Bari", 3),
    ("London", 4), ("Manchester", 4),
    ("Berlin", 5), ("Stuttgart", 5),
    ("Madrid", 6), ("Barcelona", 6)
;

INSERT INTO T_CLIENT_COUNTRY (
    clt_country_name)
VALUES
    ("USA"), ("FRANCE"),
    ("ITALY"), ("UNITED KINGDOM"),
    ("GERMANY"), ("SPAIN")
;

-- Create the Vehicule Tables

CREATE TABLE T_VEHICLE_GENERAL (
    veh_general_id INTEGER,
    veh_general_model VARCHAR(50),
    veh_general_brand VARCHAR(60),
    veh_general_year INTEGER,
    veh_general_type_id INTEGER,
    veh_general_precise_model VARCHAR(150),
    PRIMARY KEY (veh_general_id)    
);

CREATE TABLE T_VEHICLE_TYPE (
    veh_type_id INTEGER,
    veh_type_name VARCHAR(50),
    PRIMARY KEY (veh_type_id),
    FOREIGN KEY (veh_type_id) REFERENCES T_VEHICLE_GENERAL (veh_general_type_id)     
);

CREATE TABLE T_VEHICLE_COMFORT (
    veh_comfort_id INTEGER,
    veh_comfort_doors INTEGER,
    veh_comfort_seats INTEGER,
    PRIMARY KEY (veh_comfort_id),
    FOREIGN KEY (veh_comfort_id) REFERENCES T_VEHICLE_GENERAL (veh_general_id)     
);

CREATE TABLE T_VEHICLE_PERFORMANCE (
    veh_performance_id INTEGER,
    veh_performance_horsepower INTEGER,
    veh_performance_weight INTEGER,
    veh_aspiration_id INTEGER,
    PRIMARY KEY (veh_performance_id),
    FOREIGN KEY (veh_performance_id) REFERENCES T_VEHICLE_GENERAL (veh_general_id)     
);

CREATE TABLE T_VEHICLE_ASPIRATION (
    veh_aspiration_id INTEGER,
    veh_aspiration_type VARCHAR(50),
    PRIMARY KEY (veh_aspiration_id),
    FOREIGN KEY (veh_aspiration_id) REFERENCES T_VEHICLE_PERFORMANCE (veh_aspiration_id)     
);

-- Insert data in the vehicle tables

INSERT INTO T_VEHICLE_GENERAL (
    veh_general_model, veh_general_brand, 
    veh_general_year, veh_general_type_id, 
    veh_general_precise_model)
VALUES 
    ("911", "Porsche", 2020, 2, "911 GT2 RS MR"),
    ("488", "FERRARI", 2018, 2, "488 Pista"),
    ("Viper", "Dodge", 2017, 2, "Viper ACR"),
    ("Mégane", "Renault", 2017, 1, "Mégane III RS"),
    ("A4", "Audi", 2016, 3, "A4 Quattro")
;


INSERT INTO T_VEHICLE_TYPE (
    veh_type_name)
VALUES 
    ("Hatchback"),
    ("Coupé"),
    ("Saloon"),
    ("Convertible"),
    ("SUV")
;

INSERT INTO T_VEHICLE_COMFORT (
    veh_comfort_doors,
    veh_comfort_seats)
VALUES 
    (2, 2),
    (2, 2),
    (2, 2),
    (2, 4),
    (4, 5)
;

INSERT INTO T_VEHICLE_PERFORMANCE (
    veh_performance_horsepower,
    veh_performance_weight,
    veh_aspiration_id)
VALUES 
    (750, 1470, 3),
    (710, 1500, 3),
    (645, 1530, 4),
    (296, 1430, 2),
    (187, 1680, 1)
;

INSERT INTO T_VEHICLE_ASPIRATION (
    veh_aspiration_type)
VALUES 
    ("Naturally Aspirated"),
    ("Turbo"),
    ("TwinTurbo"),
    ("Supercharger"),
    ("Electric"),
    ("Hybrid"),
    ("Hybrid Turbo")
;

-- Create the Reservation tables

CREATE TABLE T_RESERVATION_GENERAL (
    rsv_general_id INTEGER,
    rsv_client_general_id INTEGER, 
    rsv_vehicle_general_id INTEGER,
    rsv_general_date_on DATETIME,
    rsv_general_duration INTEGER,
    rsv_general_estimate_off DATETIME,
    rsv_general_date_off_id INTEGER,
    rsv_general_price_id INTEGER,
    PRIMARY KEY (rsv_general_id),
    FOREIGN KEY (rsv_client_general_id) REFERENCES T_CLIENT_GENERAL (client_general_id),
    FOREIGN KEY (rsv_vehicle_general_id) REFERENCES T_VEHICLE_GENERAL (vehicle_general_id)
);

CREATE TABLE T_RESERVATION_CHECKOUT (
    rsv_checkout_id INTEGER,
    rsv_checkout_date_off DATETIME,
    rsv_checkout_extra_days INTEGER,
    PRIMARY KEY (rsv_checkout_id),
    FOREIGN KEY (rsv_checkout_id) REFERENCES T_VEHICLE_GENERAL (rsv_general_id)
);

CREATE TABLE T_RESERVATION_PRICING (
    rsv_pricing_id INTEGER,
    rsv_ordinary_pricing DECIMAL,
    rsv_extra_pricing DECIMAL,
    PRIMARY KEY (rsv_pricing_id),
    FOREIGN KEY (rsv_pricing_id) REFERENCES T_VEHICLE_GENERAL (rsv_general_id)
);

-- Insert data in the reservation tables

INSERT INTO T_RESERVATION_GENERAL (
    rsv_client_general_id, 
    rsv_vehicle_general_id,
    rsv_general_date_on,
    rsv_general_duration,
    rsv_general_estimate_off,
    rsv_general_date_off_id,
    rsv_general_price_id)
VALUES
    (1, 1, "2022-08-01", 5, "2022-08-05", 1, 1)
;


INSERT INTO T_RESERVATION_CHECKOUT (
    rsv_checkout_date_off, 
    rsv_checkout_extra_days)
VALUES
    ("2022-08-06", 1)
;

INSERT INTO T_RESERVATION_PRICING (
    rsv_ordinary_pricing, rsv_extra_pricing)
VALUES 
    (1000, 500)
;

-- Test the tables content if needed
/*
SELECT * FROM T_CLIENT_GENERAL;
SELECT * FROM T_CLIENT_CONTACT;
SELECT * FROM T_CLIENT_ADDRESS;
SELECT * FROM T_CLIENT_COUNTRY;
SELECT * FROM T_CLIENT_CITY;

SELECT * FROM T_VEHICLE_GENERAL;
SELECT * FROM T_VEHICLE_TYPE;
SELECT * FROM T_VEHICLE_COMFORT;
SELECT * FROM T_VEHICLE_PERFORMANCE;
SELECT * FROM T_VEHICLE_ASPIRATION;

SELECT * FROM T_RESERVATION_GENERAL;
SELECT * FROM T_RESERVATION_CHECKOUT;
SELECT * FROM T_RESERVATION_PRICING;
*/

-- A select query joining all the clien tables
/*
SELECT clt_general_first_name AS Prénom, clt_general_last_name AS Nom_Famille, 
    clt_contact_mail AS Mail, clt_city_name AS Ville,
    clt_country_name AS Pays
FROM T_CLIENT_GENERAL AS CG
JOIN T_CLIENT_CONTACT AS CC ON CG.clt_general_id = CC.clt_contact_id
JOIN T_CLIENT_ADDRESS AS CA ON CG.clt_general_id = CA.clt_address_id
JOIN T_CLIENT_CITY AS CCITY ON CA.clt_city_id = CCITY.clt_city_id
JOIN T_CLIENT_COUNTRY AS CCOUNTRY ON CCITY.clt_country_id = CCOUNTRY.clt_country_id
;
*/




-- A query joining clients, vehicules, and rentals
SELECT clt_general_first_name AS "Client First Name",
        clt_general_last_name AS "Client Last Name",
        veh_general_precise_model AS "Vehicle Model",
        rsv_general_date_on AS "Rental Start Date",
        rsv_general_duration AS "Loc Duration", 
        rsv_general_estimate_off AS "Scheduled Rental End", 
        rsv_checkout_date_off AS "Real Restitution Date",
        rsv_checkout_extra_days AS "Extra Days", 
        (rsv_ordinary_pricing + rsv_extra_pricing) AS "Total Price"
FROM T_RESERVATION_GENERAL AS RG
JOIN T_RESERVATION_CHECKOUT AS RC ON RC.rsv_checkout_id = RG.rsv_general_id
JOIN T_RESERVATION_PRICING AS RP ON RP.rsv_pricing_id = RG.rsv_general_id
JOIN T_CLIENT_GENERAL AS CG ON CG.clt_general_id = RG.rsv_general_id
JOIN T_VEHICLE_GENERAL AS VG ON VG.veh_general_id = RG.rsv_general_id
;

